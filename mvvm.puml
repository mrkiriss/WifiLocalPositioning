@startuml
class com.mrkiriss.wifilocalpositioning.mvvm.repositiries.TrainingMapRepository {
- LocationDataApi retrofit
- MapImageManager mapImageManager
- WifiScanner wifiScanner
- MutableLiveData<String> toastContent
- MutableLiveData<Floor> changeFloor
- MutableLiveData<String> serverResponse
- MutableLiveData<List<MapPoint>> serverConnectionsResponse
- MutableLiveData<String> requestToUpdateFloor
- LiveData<CompleteKitsContainer> completeKitsOfScansResult
- LiveData<Integer> remainingNumberOfScanning
- CalibrationLocationPoint calibrationLocationPoint
+ void changeFloor(int,boolean)
+ void changeFloor(int,boolean,MapPoint)
- boolean checkContainsInCurrentData(FloorId)
+ MapPoint findMapPointInCurrentData(int,int,int)
+ void runScanInManager(int,String)
+ void processCompleteKitsOfScanResults(CompleteKitsContainer)
+ void startDownloadingDataOnPointsOnAllFloors()
+ void postFromTrainingWithCoordinates(int,int,String,int,String)
- void saveNewLPInfoIntoLocaleMap(LocationPointInfo)
- void postFromTrainingWithAPs()
+ void deleteLocationPointInfoOnServer(String)
+ void deleteLocationPointOnServer(String)
+ void startDownloadingConnections(String)
+ void postChangedConnections(List<MapPoint>,String)
}
class com.mrkiriss.wifilocalpositioning.mvvm.view.LocationDetectionFragment {
# LocationDetectionViewModel viewModel
- FragmentLocationDetectionBindingImpl binding
- TouchImageView touchImageView
- AutoCompleteAdapter autoCompleteAdapter
+ void onCreate(Bundle)
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
- void createAndShowMapView()
- void createSearchAdapterAndSetSettings()
- void initObservers()
- void showToastContent(String)
- void drawCurrentLocation(MapPoint)
- void drawCurrentFloor(Floor)
- void showCurrentLocation(MapPoint)
+ {static} void hideKeyboard(Activity)
}
class com.mrkiriss.wifilocalpositioning.mvvm.view.SettingsFragment {
# SettingsViewModel viewModel
- FragmentSettingsBinding binding
+ void onCreate(Bundle)
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
- void initObservers()
- void showToastContent(String)
- void setContentToChangeBuffer(String)
}
class TrainingMapViewModel {
- TrainingMapRepository repository
- ObservableInt selectedMod
- ObservableBoolean showMapPoints
- ObservableInt floorNumber
- ObservableField<MapPoint> selectedMapPoint
- ObservableField<String> serverResponse
- ObservableField<String> inputY
- ObservableField<String> inputX
- ObservableField<String> inputCabId
- ObservableInt selectedRoomType
- ObservableInt selectedFloorId
- ObservableInt remainingNumberOfScanKits
- ObservableField<String> inputNumberOfScanKits
- ObservableField<MapPoint> selectedToChangMapPoint
- ObservableField<String> contentOnActionsButtonChangesNeighbors
+ String MODE_SELECT_MAIN
+ String MODE_ADD_SECONDLY
- List<MapPoint> currentChangeableConnections
- LiveData<Floor> changeFloor
- LiveData<String> serverResponseRequest
- MutableLiveData<String> requestToUpdateFloor
- MutableLiveData<String> toastContent
- MutableLiveData<int[]> moveCamera
- LiveData<CompleteKitsContainer> completeKitsOfScansResult
- LiveData<Integer> remainingNumberOfScanning
- MutableLiveData<List<MapPoint>> serverConnectionsResponse
- MutableLiveData<MapPoint> requestToAddSecondlyMapPointToRV
- MutableLiveData<List<MapPoint>> requestToChangeSecondlyMapPointListInRV
+ void processShowSelectedMapPoint(boolean)
- void processModePointInfo(boolean)
- void startFindNearPoint()
+ void arrowInc()
+ void arrowDec()
+ void startFloorChanging()
+ void startFloorChanging(MapPoint)
+ void startUpdatingMapPointLists()
+ void updateFloor(String)
+ void postPointInformationToServer()
+ void startScanning()
+ void processCompleteKitsOfScanResults(CompleteKitsContainer)
+ void selectActionForChangingNeighbors()
- void processSelectMainMode(MapPoint)
+ void processServerConnectionsResponse(List<MapPoint>)
- void processAddSecondlyMode(MapPoint)
+ void processDeleteSecondly(MapPoint)
+ void acceptPointChangingNeighbors()
+ void cancelPointChangingNeighbors()
+ void startDeletingLPINfo()
+ void startDeletingLP()
}
class com.mrkiriss.wifilocalpositioning.mvvm.view.TrainingScanFragment {
- FragmentTrainingScanBinding binding
# TrainingScanViewModel viewModel
- ScanResultsRVAdapter adapter
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
- void initObservers()
- void addKitOfAPsOnRecyclerView(String)
}
class com.mrkiriss.wifilocalpositioning.mvvm.repositiries.LocationDetectionRepository {
- LocationDataApi retrofit
- WifiScanner wifiScanner
- MapImageManager mapImageManager
- ConnectionManager connectionManager
- SettingsManager settingsManager
- LiveData<CompleteKitsContainer> completeKitsOfScansResult
- LiveData<Integer> requestToUpdateAccessLevel
- MutableLiveData<MapPoint> requestToChangeFloorByMapPoint
- MutableLiveData<Floor> requestToChangeFloor
- MutableLiveData<String> toastContent
- MutableLiveData<String> requestToRefreshFloor
- MutableLiveData<Map<FloorId,List<MapPoint>>> requestToAddAllPointsDataInAutoFinders
- MutableLiveData<Boolean> wifiEnabledState
- MutableLiveData<String> requestToHideKeyboard
- MutableLiveData<Boolean> requestToUpdateProgressStatusBuildingRoute
- List<LocationPointInfo> listOfSearchableLocations
- MapPoint resultOfDefinition
- boolean showRoute
- int currentFloorIdInt
+ void showWifiOffering(Context)
+ void changeFloor()
- Floor defineNecessaryFloor()
- Floor defineNecessaryFloorForShowCurrentLocation()
+ void changeFloorWithMapPoint()
+ void clearRouteFloors()
+ void findRoom(String)
+ void startProcessingCompleteKitsOfScansResult(CompleteKitsContainer)
- void requestDefinitionLocation(CalibrationLocationPoint)
- MapPoint convertToMapPoint(DefinedLocationPoint)
+ void requestRoute(String,String)
+ void requestListOfLocationPointsInfo()
}
class com.mrkiriss.wifilocalpositioning.mvvm.repositiries.TrainingScanRepository {
- LocationDataApi retrofit
- WifiScanner wifiScanner
- CalibrationLocationPoint calibrationLocationPoint
- int scanningMode
+ {static} int MODE_TRAINING_APS
+ {static} int MODE_DEFINITION
- LiveData<CompleteKitsContainer> completeKitsOfScansResult
- MutableLiveData<String> requestToAddAPs
- MutableLiveData<String> serverResponse
- MutableLiveData<String> toastContent
- LiveData<Integer> remainingNumberOfScanning
+ void runScanInManager(int,int)
+ void runScanInManager(int,String,int)
+ void processCompleteKitsOfScanResults(CompleteKitsContainer)
- String convertKitToString(List<AccessPoint>,int)
- void chosePostCalibrationLPToServer()
- void postFromTrainingWithAPs()
- void postFromDefinitionLocation()
}
class LocationDetectionViewModel {
- LocationDetectionRepository repository
- LiveData<CompleteKitsContainer> completeKitsOfScansResult
- LiveData<MapPoint> requestToChangeFloorByMapPoint
- LiveData<Floor> requestToChangeFloor
- LiveData<Map<FloorId,List<MapPoint>>> requestToAddAllPointsDataInAutoFinders
- LiveData<Boolean> wifiEnabledState
- LiveData<String> requestToHideKeyboard
- LiveData<Boolean> requestToUpdateProgressStatusBuildingRoute
- LiveData<Integer> requestToUpdateAccessLevel
- MutableLiveData<String> requestToRefreshFloor
- MutableLiveData<String> toastContent
- ObservableInt floorNumber
- ObservableField<String> findInput
- ObservableField<String> departureInput
- ObservableField<String> destinationInput
- ObservableBoolean showRoute
- ObservableBoolean showFind
- ObservableBoolean progressOfBuildingRouteStatus
+ void startProcessingCompleteKitsOfScansResult(CompleteKitsContainer)
+ void onShowRoute()
+ void onHideRoute()
+ void onShowFind()
+ void onHideFind()
+ void arrowInc()
+ void arrowDec()
+ void startFloorChanging()
+ void onShowCurrentLocation()
+ void startBuildRoute()
+ void startFindRoom()
+ void showWifiOffering(Context)
}
class com.mrkiriss.wifilocalpositioning.mvvm.view.MainActivity {
# MainViewModel viewModel
- NavigationView navigationView
- AppBarConfiguration mAppBarConfiguration
- Toolbar toolbar
- DrawerLayout drawer
- NavController navController
- NavHostFragment navHostFragment
- Fragment[] fragments
- String[] fragmentTAGS
- String[] typesOfRequestSources
- int currentFragmentIndex
# void onCreate(Bundle)
- void createNavigationView()
+ boolean onCreateOptionsMenu(Menu)
+ boolean onSupportNavigateUp()
- void createFragments()
- int defineFragmentIndex(MenuItem)
- void setBottomNavigationListener(NavigationView)
+ void changeFragment(int)
- void checkPermissions()
- void notifyAboutLackOfAccess()
+ void watchYoutubeVideo(String)
+ {static} void hideKeyboard(Activity)
}
class com.mrkiriss.wifilocalpositioning.mvvm.view.TrainingMapFragment {
# TrainingMapViewModel viewModel
- FragmentTrainingMapBinding binding
- PhotoView photoView
- MapPointsRVAdapter mapPointsAdapter
+ View onCreateView(LayoutInflater,ViewGroup,Bundle)
- void initMapPointsAdapter()
- void initPhotoView()
- void initObservers()
- void changeBitmap(Bitmap)
- void showToast(String)
- void moveCamera(int[])
}
class TrainingScanViewModel {
- TrainingScanRepository trainingScanRepository
- ObservableInt remainingNumberOfScanning
- ObservableField<String> inputNumberOfScanKits
- ObservableField<String> inputY
- ObservableField<String> inputX
- ObservableField<String> inputCabId
- ObservableInt scanningMode
- ObservableBoolean isScanningStarted
- ObservableInt selectedMod
- LiveData<CompleteKitsContainer> completeKitsOfScansResult
- LiveData<String> requestToAddAPs
- MutableLiveData<String> resultOfScanningAfterCalibration
- MutableLiveData<String> toastContent
- MutableLiveData<List<String>> requestToClearRV
- LiveData<Integer> remainingNumberOfScanningLD
+ void startScanning()
- void convertScanningMode()
+ void startProcessingCompleteKitsOfScansResult(CompleteKitsContainer)
+ void changeScanningStatus(boolean)
+ void resetElements()
}
class SettingsViewModel {
- SettingsRepository repository
- ObservableField<String> scanInterval
- ObservableInt numberOfScanning
- ObservableInt accessLevel
- LiveData<Integer> requestToUpdateNumberOfScanning
- LiveData<String> requestToUpdateScanInterval
- LiveData<Integer> requestToUpdateAccessLevel
- LiveData<String> requestToUpdateCopyUUID
- MutableLiveData<String> toastContent
- void initSettingValuesFromDB()
+ void acceptSettingsChange()
+ void requestToUpdateAccessLevel()
+ void requestToCopyUUID()
}
class com.mrkiriss.wifilocalpositioning.mvvm.repositiries.MainRepository {
- WifiScanner wifiScanner
- SettingsManager settingsManager
- ScanningAbilitiesManager abilitiesManager
- LiveData<String> requestToOpenInstructionObYouTube
+ LiveData<String> getRequestToOpenInstructionObYouTube()
+ boolean isPresentAccessPermission(String)
+ void setCurrentTypeOfRequestSource(String)
+ void checkAndroidVersionForShowingScanningAbilities(Context)
}
class MainViewModel {
- MainRepository repository
- LiveData<String> requestToOpenInstructionObYouTube
+ LiveData<String> getRequestToOpenInstructionObYouTube()
+ boolean isPresentAccessPermission(String)
+ void setCurrentTypeOfRequestSource(String)
+ void checkAndroidVersionForShowingScanningAbilities(Context)
}
class com.mrkiriss.wifilocalpositioning.mvvm.repositiries.SettingsRepository {
- SettingsDao settingsDao
- SettingsManager settingsManager
- MutableLiveData<Integer> requestToUpdateNumberOfScanning
- MutableLiveData<String> requestToUpdateScanInterval
- MutableLiveData<Integer> requestToUpdateAccessLevel
- MutableLiveData<String> requestToUpdateCopyUUID
- MutableLiveData<String> toastContent
- int currentSavedScanInterval
- int currentSavedNumberOfScanning
- int numberOfTryingToCopy
- int requiredNumberOfTryingToCopy
+ void updateSettingValuesFromDB()
+ void updateDataFromSaved()
+ void requestToUpdateAccessLevel()
+ void requestToGetUUID()
+ void acceptSettingsChange(int,int)
- boolean isValidSettingsData(int,int)
}
class ItemMapPointViewModel {
- MapPoint mapPoint
- MutableLiveData<MapPoint> requestToDelete
+ void onDeleteClick()
}


java.io.Serializable <|.. com.mrkiriss.wifilocalpositioning.mvvm.repositiries.TrainingMapRepository
androidx.fragment.app.Fragment <|-- com.mrkiriss.wifilocalpositioning.mvvm.view.LocationDetectionFragment
androidx.fragment.app.Fragment <|-- com.mrkiriss.wifilocalpositioning.mvvm.view.SettingsFragment
androidx.lifecycle.ViewModel <|-- TrainingMapViewModel
androidx.fragment.app.Fragment <|-- com.mrkiriss.wifilocalpositioning.mvvm.view.TrainingScanFragment
java.io.Serializable <|.. com.mrkiriss.wifilocalpositioning.mvvm.repositiries.LocationDetectionRepository
androidx.lifecycle.ViewModel <|-- LocationDetectionViewModel
androidx.appcompat.app.AppCompatActivity <|-- com.mrkiriss.wifilocalpositioning.mvvm.view.MainActivity
androidx.fragment.app.Fragment <|-- com.mrkiriss.wifilocalpositioning.mvvm.view.TrainingMapFragment
androidx.lifecycle.ViewModel <|-- TrainingScanViewModel
androidx.lifecycle.ViewModel <|-- SettingsViewModel
androidx.lifecycle.ViewModel <|-- MainViewModel
androidx.lifecycle.ViewModel <|-- ItemMapPointViewModel
@enduml